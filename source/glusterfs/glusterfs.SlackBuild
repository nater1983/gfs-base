#!/bin/sh

# Slackware build script for GlusterFS

# Copyright (c) 2016-2018 Thomas Szteliga <ts@websafe.pl>, Opole, PL
# Modified by Rafael Tavares <mdrafaeltavares@gmail.com> for gfs (2021)
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

PRGNAM=$(basename $0 | cut -f1 -d.)
VERSION=${VERSION:-$(find . -maxdepth 1 -name "$PRGNAM-*.tar.?z*" | rev | cut -f 3- -d . | cut -f 1 -d - | rev)}
BUILD=${BUILD:-1}
TAG=${TAG:-_gfs}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/gfs}
PKG=$TMP/pkg-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}
JOBS=${JOBS:-" -j$(expr $(getconf _NPROCESSORS_ONLN) \* 2 ) "}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

UMASKBKP=$(umask)
umask 0022

DEPCHK=""
OPTDEP=""

if [ -z $VERSION ]
 then
 VERSION=9.3
fi

MDSCHK=2f7c47c4cdeb4b511b35934c4586da69
DWNLCMD=${DWNLCMD:-"wget -c --no-check-certificate"}
SRCDOWN=${SRCDOWN:-"https://download.gluster.org/pub/gluster/glusterfs/9/9.3/glusterfs-9.3.tar.gz"}

if [ -z $(find . -maxdepth 1 -name "$PRGNAM-$VERSION.tar.?z*") ]
then
 $DWNLCMD $SRCDOWN
else
 if md5sum -c <<<"$MDSCHK $(echo $PRGNAM-$VERSION.tar.?z*)";
  then
   continue
  else
   rm -rf $PRGNAM-$VERSION.tar.?z*
   $DWNLCMD $SRCDOWN
 fi
fi

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

./autogen.sh

CFLAGS="$SLKCFLAGS -w -Wl,--allow-multiple-definition" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
 --prefix=/usr \
 --libdir=/usr/lib${LIBDIRSUFFIX} \
 --sysconfdir=/etc \
 --localstatedir=/var \
 --mandir=/usr/man \
 --docdir=/usr/doc/$PRGNAM-$VERSION \
 --disable-static \
 --enable-shared=yes \
 --disable-debug \
 --enable-valgrind=no \
 --enable-metadisp \
 --enable-firewalld \
 --enable-gnfs \
 --disable-cmocka \
 --build=$ARCH-slackware-linux

make $JOBS || make
make install DESTDIR=$PKG

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG -name '*.la' -delete

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

rm -f \
  $PKG/etc/$PRGNAM/gluster-rsyslog-5.8.conf \
  $PKG/etc/$PRGNAM/gluster-rsyslog-7.2.conf

install -D -m 0755 extras/command-completion/gluster.bash \
  $PKG/etc/bash_completion.d/gluster-bash-completion.sh

mv $PKG/etc/$PRGNAM/eventsconfig.json $PKG/etc/$PRGNAM/eventsconfig.json.new
mv $PKG/etc/$PRGNAM/glusterd.vol $PKG/etc/$PRGNAM/glusterd.vol.new
mv $PKG/etc/glusterfs/group-db-workload $PKG/etc/glusterfs/group-db-workload.new
mv $PKG/etc/glusterfs/group-distributed-virt $PKG/etc/glusterfs/group-distributed-virt.new
mv $PKG/etc/$PRGNAM/group-gluster-block $PKG/etc/$PRGNAM/group-gluster-block.new
mv $PKG/etc/$PRGNAM/group-metadata-cache $PKG/etc/$PRGNAM/group-metadata-cache.new
mv $PKG/etc/$PRGNAM/group-nl-cache $PKG/etc/$PRGNAM/group-nl-cache.new
mv $PKG/etc/glusterfs/group-samba $PKG/etc/glusterfs/group-samba.new
mv $PKG/etc/$PRGNAM/group-virt.example $PKG/etc/$PRGNAM/group-virt.example.new
mv $PKG/etc/$PRGNAM/gsyncd.conf $PKG/etc/$PRGNAM/gsyncd.conf.new
mv $PKG/etc/$PRGNAM/logger.conf.example $PKG/etc/$PRGNAM/logger.conf.example.new
mv $PKG/etc/glusterfs/thin-arbiter.vol $PKG/etc/glusterfs/thin-arbiter.vol.new

mkdir -p $PKG/etc/logrotate.d
mv $PKG/etc/$PRGNAM/glusterfs-logrotate $PKG/etc/logrotate.d/glusterfs.new
mv $PKG/etc/$PRGNAM/glusterfs-georep-logrotate \
  $PKG/etc/logrotate.d/glusterfs-georep.new

install -D -m 0644 extras/init.d/glusterd-Redhat $PKG/etc/rc.d/rc.glusterd.new

cp -a AUTHORS COMMITMENT COPYING* ChangeLog INSTALL NEWS README.md THANKS VERSION \
 $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
#      |-----handy-ruler------------------------------------------------------|
cat <<EOT >$PKG/install/slack-desc
$PRGNAM:
$PRGNAM: GlusterFS (scalable network filesystem)
$PRGNAM:
$PRGNAM: GlusterFS is a scalable network filesystem. Using common
$PRGNAM: off-the-shelf hardware, you can create large, distributed storage
$PRGNAM: solutions for media streaming, data analysis, and other data- and
$PRGNAM: bandwidth-intensive tasks. GlusterFS is free and open source
$PRGNAM: software.
$PRGNAM:
$PRGNAM: https://www.gluster.org/
$PRGNAM:
EOT

cat <<\EOT >$PKG/install/doinst.sh
config() {
  NEW="$1"
  OLD="$(dirname $NEW)/$(basename $NEW .new)"
  # If there's no config file by that name, mv it over:
  if [ ! -r $OLD ]; then
    mv $NEW $OLD
  elif [ "$(cat $OLD | md5sum)" = "$(cat $NEW | md5sum)" ]; then
    # toss the redundant copy
    rm $NEW
  fi
  # Otherwise, we leave the .new copy for the admin to consider...
}

preserve_perms() {
  NEW="$1"
  OLD="$(dirname $NEW)/$(basename $NEW .new)"
  if [ -e $OLD ]; then
    cp -a $OLD ${NEW}.incoming
    cat $NEW > ${NEW}.incoming
    mv ${NEW}.incoming $NEW
  fi
  config $NEW
}

config etc/glusterfs/eventsconfig.json.new
config etc/glusterfs/glusterd.vol.new
config etc/glusterfs/group-gluster-block.new
config etc/glusterfs/group-metadata-cache.new
config etc/glusterfs/group-nl-cache.new
config etc/glusterfs/group-virt.example.new
config etc/glusterfs/gsyncd.conf.new
config etc/glusterfs/logger.conf.example.new
config etc/logrotate.d/glusterfs-georep.new
config etc/logrotate.d/glusterfs.new
preserve_perms etc/rc.d/rc.glusterd.new
EOT

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}

umask ${UMASKBKP}

